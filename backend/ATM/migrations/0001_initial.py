# Generated by Django 3.1.3 on 2020-11-18 12:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('한식', models.BooleanField()),
                ('일식', models.BooleanField()),
                ('중식', models.BooleanField()),
                ('양식', models.BooleanField()),
                ('카페', models.BooleanField()),
                ('기타', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('addressName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PreferenceVector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('매운', models.FloatField()),
                ('느끼한', models.FloatField()),
                ('짭짤한', models.FloatField()),
                ('달달한', models.FloatField()),
                ('기름진', models.FloatField()),
                ('고소한', models.FloatField()),
                ('싱거운', models.FloatField()),
                ('신맛이나는', models.FloatField()),
                ('담백한', models.FloatField()),
                ('바삭바삭한', models.FloatField()),
                ('부드러운', models.FloatField()),
                ('저렴한', models.FloatField()),
                ('푸짐한', models.FloatField()),
                ('웨이팅이있는', models.FloatField()),
                ('혼밥하기좋은', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('foodCategory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ATM.foodcategory')),
                ('preferenceVector', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ATM.preferencevector')),
                ('searchLocation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ATM.location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('avgRating', models.FloatField()),
                ('foodCategory', models.CharField(max_length=100)),
                ('kakaoLink', models.URLField()),
                ('naverLink', models.URLField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ATM.location')),
                ('preferenceVector', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ATM.preferencevector')),
            ],
        ),
        migrations.CreateModel(
            name='ThumbNail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbNail', to='ATM.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('rating', models.FloatField()),
                ('date', models.DateTimeField()),
                ('source', models.CharField(max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='ATM.profile')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='ATM.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='openTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=20)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='openTime', to='ATM.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('price', models.IntegerField()),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu', to='ATM.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=20)),
                ('weight', models.IntegerField()),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword', to='ATM.restaurant')),
            ],
        ),
    ]
